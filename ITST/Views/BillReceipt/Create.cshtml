@model ITST.ViewModels.Billing

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>BillReceipt</h4>
        <hr />
        @Html.ValidationSummary(true)

        <div class="form-group">
            @Html.LabelFor(model => model.Type, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Type, ITST.Controllers.BillReceiptController.ListType(), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Type)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BillReceiptNo, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.BillReceiptNo, new { @class = "form-control", @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.BillReceiptNo)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CompanyName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.CompanyName, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CompanyName)
            </div>
        </div>

        <div class="hidden">
            @Html.LabelFor(model => model.IsPrint, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.IsPrint, new { @class = "form-control", @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.IsPrint)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateCreate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.DateCreate, new { @class = "form-control", @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.DateCreate)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateUpdate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.DateUpdate, new { @class = "form-control" , @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.DateUpdate)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreateBy, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.CreateBy, new { @class = "form-control", @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.CreateBy)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UpdateBy, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.UpdateBy, new { @class = "form-control", @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.UpdateBy)
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
