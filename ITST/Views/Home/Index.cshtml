@*@model ITST.ViewModels.IndexSearch*@

@{
    ViewBag.Title = "Home Page";
}

@*@using (Html.BeginForm("FindingDevice", "Device", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <div class="container well-lg">
        <div class="row">
            <div class="col-lg-8">
                <div class="input-group">
                    <span class="input-group-btn">
                        <button class="btn btn-primary" type="submit" value="submit"><span class="glyphicon glyphicon-search"></span></button>
                    </span>
                    @Html.TextBoxFor(model => model.SerialNumber, String.Empty, new { id = "SearchString", @class = "form-control", @placeholder = "ค้นหาอุปกรณ์..." })
                    @Html.ValidationMessageFor(model => model.SerialNumber)
                </div>
            </div>
        </div>
    </div>
}*@

    <div class="container">
    <div class="col-lg-6 well-lg">
        <h4>In Repair</h4>
        <table class="table table-bordered">
            <thead>
                <tr class="active">
                    <th>Type</th>
                    <th>Quantity</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>QR Code Scanner</td>
                    <td>@ViewBag.ScannerRepairQty</td>
                </tr>
                <tr>
                    <td>Panel PC</td>
                    <td>@ViewBag.PanelPCRepairQty</td>
                </tr>
                <tr>
                    <td>Preset PC</td>
                    <td>@ViewBag.PresetPCRepairQty</td>
                </tr>
                <tr>
                    <td>Printer</td>
                    <td>@ViewBag.PrinterRepairQty</td>
                </tr>
            </tbody>
         </table>
    </div>
    <div class="col-lg-6 well-lg">
        <h4>QR Code Scanner</h4>
        <canvas id="myChartSC"></canvas>
    </div>
    <div class="col-lg-6 well-lg">
        <h4>Panel PC</h4>
        <canvas id="myChartPN"></canvas>
    </div>
    <div class="col-lg-6 well-lg">
        <h4>Printer</h4>
        <canvas id="myChartPT"></canvas>
    </div>

    <div class="well-lg">
        <h4>Preset PC</h4>
        <canvas id="myChartPS"></canvas>
    </div>
</div>

    
    @*<div class="container well-lg">
        <div class="row">
            <div class="col-md-4 col-sm-3 col-xs-6">
                
            </div>
            <div class="col-md-4 col-sm-3 col-xs-6">
                <div class="alert alert-danger text-center">
                    <h4> CAUTION </h4>
                    <hr>
                    <i class="glyphicon glyphicon-warning-sign" style="font-size:5em" ></i>
                    <p>
                        Please login.
                    </p>
                    <hr>
                    @Html.ActionLink("Login", "Login", "Account",null, new { @class = "btn btn-danger" })
                </div>
            </div>
            <div class="col-md-4 col-sm-3 col-xs-6">
                
            </div>
        </div>
    </div>*@


@section Scripts{

    <script>
    $(document).ready(function () {
        $.ajax({
            url: '@Url.Action("getChartPresetPCData", "Dashboard")',
            method: "GET",
            success: function (data) {
                console.log(data);
                var Model = [];
                var InStock = [];
                var Minimum = [];

                for (var i in data) {
                    Model.push(data[i].Model);
                    InStock.push(data[i].InStock);
                    Minimum.push(data[i].Minimum);
                }

                var chartdata = {
                    labels: Model,
                    datasets: [
                        {
                            label: 'Minimum Stock',
                            type: 'line',
                            fill: false,
                            lineTension: 0,
                            backgroundColor: "rgba(75,192,192,0.4)",
                            borderColor: "rgba(75,192,192,1)",
                            data: Minimum
                        },
                        {
                            label: 'In Stock',
                            type: 'bar',
                            backgroundColor: 'rgba(255,99,132,0.2)',
                            borderColor: 'rgba(255,99,132,1)',
                            hoverBackgroundColor: 'rgba(200, 200, 200, 1)',
                            hoverBorderColor: 'rgba(200, 200, 200, 1)',
                            data: InStock
                        }
                    ]
                };
                var tid = "#myChartPS";
                var ctx = $(tid);
                var barGraph = new Chart(ctx, {
                    type: 'bar',
                    data: chartdata
                })
                $('#myChartPS').click(function (e) {
                    var activeBars = barGraph.getElementsAtEvent(e)
                    var firstPoint = activeBars[0];
                    //alert(chartdata.datasets[firstPoint._datasetIndex].data[firstPoint._index])
                    var department = chartdata.labels[firstPoint._index];
                    window.location.href = '/Dashboard/DeviceInStock/' + '?model=' + department
                });
            },
            error: function (data) {
                console.log(data);
            }
        });
    });
</script>

    <script>
        $(document).ready(function () {
            $.ajax({
                url: '@Url.Action("getChartScannerData", "Dashboard")',
                method: "GET",
                success: function (data) {
                    console.log(data);
                    var Model = [];
                    var InStock = [];
                    var Minimum = [];

                    for (var i in data) {
                        Model.push(data[i].Model);
                        InStock.push(data[i].InStock);
                        Minimum.push(data[i].Minimum);
                    }

                    var chartdata = {
                        labels: Model,
                        datasets: [
                            {
                                label: 'Minimum Stock',
                                type: 'line',
                                fill: false,
                                lineTension: 0,
                                backgroundColor: "rgba(75,192,192,0.4)",
                                borderColor: "rgba(75,192,192,1)",
                                data: Minimum
                            },
                            {
                                label: 'In Stock',
                                type: 'bar',
                                backgroundColor: 'rgba(255,99,132,0.2)',
                                borderColor: 'rgba(255,99,132,1)',
                                hoverBackgroundColor: 'rgba(200, 200, 200, 1)',
                                hoverBorderColor: 'rgba(200, 200, 200, 1)',
                                data: InStock
                            }
                        ]
                    };
                    var tid = "#myChartSC";
                    var ctx = $(tid);
                    var barGraph = new Chart(ctx, {
                        type: 'bar',
                        data: chartdata
                    })
                    $('#myChartSC').click(function (e) {
                        var activeBars = barGraph.getElementsAtEvent(e)
                        var firstPoint = activeBars[0];
                        //alert(chartdata.datasets[firstPoint._datasetIndex].data[firstPoint._index])
                        var department = chartdata.labels[firstPoint._index];
                        window.location.href = '/Dashboard/DeviceInStock/' + '?model=' + department
                    });
                },
                error: function (data) {
                    console.log(data);
                }
            });
        });
    </script>

<script>
    $(document).ready(function () {
        $.ajax({
            url: '@Url.Action("getChartPanelPCData", "Dashboard")',
            method: "GET",
            success: function (data) {
                console.log(data);
                var Model = [];
                var InStock = [];
                var Minimum = [];

                for (var i in data) {
                    Model.push(data[i].Model);
                    InStock.push(data[i].InStock);
                    Minimum.push(data[i].Minimum);
                }

                var chartdata = {
                    labels: Model,
                    datasets: [
                        {
                            label: 'Minimum Stock',
                            type: 'line',
                            fill: false,
                            lineTension: 0,
                            backgroundColor: "rgba(75,192,192,0.4)",
                            borderColor: "rgba(75,192,192,1)",
                            data: Minimum
                        },
                        {
                            label: 'In Stock',
                            type: 'bar',
                            backgroundColor: 'rgba(255,99,132,0.2)',
                            borderColor: 'rgba(255,99,132,1)',
                            hoverBackgroundColor: 'rgba(200, 200, 200, 1)',
                            hoverBorderColor: 'rgba(200, 200, 200, 1)',
                            data: InStock
                        }
                    ]
                };
                var tid = "#myChartPN";
                var ctx = $(tid);
                var barGraph = new Chart(ctx, {
                    type: 'bar',
                    data: chartdata
                })
                $('#myChartPN').click(function (e) {
                    var activeBars = barGraph.getElementsAtEvent(e)
                    var firstPoint = activeBars[0];
                    //alert(chartdata.datasets[firstPoint._datasetIndex].data[firstPoint._index])
                    var department = chartdata.labels[firstPoint._index];
                    window.location.href = '/Dashboard/DeviceInStock/' + '?model=' + department
                });
            },
            error: function (data) {
                console.log(data);
            }
        });
    });
</script>

<script>
    $(document).ready(function () {
        $.ajax({
            url: '@Url.Action("getChartPrinterData", "Dashboard")',
            method: "GET",
            success: function (data) {
                console.log(data);
                var Model = [];
                var InStock = [];
                var Minimum = [];

                for (var i in data) {
                    Model.push(data[i].Model);
                    InStock.push(data[i].InStock);
                    Minimum.push(data[i].Minimum);
                }

                var chartdata = {
                    labels: Model,
                    datasets: [
                        {
                            label: 'Minimum Stock',
                            type: 'line',
                            fill: false,
                            lineTension: 0,
                            backgroundColor: "rgba(75,192,192,0.4)",
                            borderColor: "rgba(75,192,192,1)",
                            data: Minimum
                        },
                        {
                            label: 'In Stock',
                            type: 'bar',
                            backgroundColor: 'rgba(255,99,132,0.2)',
                            borderColor: 'rgba(255,99,132,1)',
                            hoverBackgroundColor: 'rgba(200, 200, 200, 1)',
                            hoverBorderColor: 'rgba(200, 200, 200, 1)',
                            data: InStock
                        }
                    ]
                };
                var tid = "#myChartPT";
                var ctx = $(tid);
                var barGraph = new Chart(ctx, {
                    type: 'bar',
                    data: chartdata
                })
                $('#myChartPT').click(function (e) {
                    var activeBars = barGraph.getElementsAtEvent(e)
                    var firstPoint = activeBars[0];
                    //alert(chartdata.datasets[firstPoint._datasetIndex].data[firstPoint._index])
                    var department = chartdata.labels[firstPoint._index];
                    window.location.href = '/Dashboard/DeviceInStock/' + '?model=' + department
                });
            },
            error: function (data) {
                console.log(data);
            }
        });
    });
</script>
}

@*@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/themes/base/css")
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
    $(document).ready(function () {
        $("#SearchString").autocomplete({
            autoFocus: true,
            source: function (request, response) {
                $.ajax({
                    url: '@Url.Action("FindDevice","Device")',
                    data: "{ 'prefixText': '" + request.term + "' }",
                    dataType: "json",
                    dataFilter: function (data) { return data; },
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        response($.map(data, function (item) {
                            return {
                                label: item.value,
                                value: item.name,
                            }
                        }))
                    },
                    messages: {
                        noResults: "", results: ""
                    },
                    error: function (response) {
                        alert(response.responseText);
                    },
                    failure: function (response) {
                        alert(response.responseText);
                    }
                });
            },
            minLength: 1,
        });
    });
    </script>

}*@