@model IEnumerable<ITST.Models.UserSheet>
@using GridMvc.Html

@{
    ViewBag.Title = "Index";
}

<h2>User Sheet</h2>

<div class="row">
    @Html.ActionLink("Summary Report", "summaryRpt", null, new { @class = "btn btn-primary pull-right btn-sm RbtnMargin" })
</div>

<hr />

<table class="table table-bordered" id="myTable">
    <thead>
        <tr class="active">
            <th></th>
            <th>Action</th>
            <th>Create By</th>
            <th>Update By</th>
            <th>User</th>
            <th>Plant</th>
            <th>Department</th>
            <th>Location</th>
            <th>Phase</th>
            <th>Date Create</th>
            <th>Date Update</th>
        </tr>
    </thead>
</table>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/themes/base/css")
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).ready(function () {
            $.fn.dataTable.moment('HH:mm MMM D, YY');
            $.fn.dataTable.moment('dddd, MMMM Do, YYYY');
            $.fn.dataTable.moment('DD/MM/YYYY, h:mm:ss a');
            $('#myTable').DataTable({
                responsive: {
                    details: {
                        renderer: function (api, rowIdx, columns) {
                            var data = $.map(columns, function (col, i) {
                                return col.hidden ?
                                    '<tr data-dt-row="' + col.rowIndex + '" data-dt-column="' + col.columnIndex + '">' +
                                        '<td>' + col.title + ':' + '</td> ' +
                                        '<td>' + col.data + '</td>' +
                                    '</tr>' :
                                    '';
                            }).join('');

                            return data ?
                                $('<table/>').append(data) :
                                false;
                        }
                    }
                },
                "ajax": {
                    "url": '@Url.Action("getUserSheet", new { sr = ViewBag.SR })',
                    "type": "GET",
                    "datatype": "json"
                },
                dom: 'Bfrtip',
                buttons: [
                    'copy', 'excel', 'pdf'
                ],
                "columns": [
                    {
                        "className": 'details-control',
                        "orderable": false,
                        "data": null,
                        "defaultContent": ''
                    },
                                        {
                                            "data": "SheetID",
                                            "render": function (data, type, full, meta) {
                                                return '<a href="@Url.Action("Edit/")' + data + '">Edit</a>' + '&nbsp;' + '|' + '&nbsp;' + '<a href="@Url.Action("Delete/")' + data + '">Delete</a>' + '&nbsp;' + '|' + '&nbsp;' + '<a href="@Url.Action("print/")' + data + '">Print</a>' + '&nbsp;' + '|' + '&nbsp;' + '<a href="@Url.Action("Details/")' + data + '">Details</a>';
                                            },
                                            "autoWidth": true
                                        },
                        { "data": "CreateBy", "autoWidth": true },
                        { "data": "UpdateBy", "autoWidth": true },
                        { "data": "UserName", "autoWidth": true },
                        { "data": "Plant", "autoWidth": true },
                        { "data": "Department", "autoWidth": true },
                        { "data": "Location", "autoWidth": true },
                        { "data": "Phase", "autoWidth": true },
                        {
                            "data": "DateCreate",
                            "render": function (data, type, row) {
                                var rowvalueallday = row.DateCreate;
                                if (rowvalueallday == '0000-00-00') {
                                    var gdat = '1900-01-01';
                                    return (moment(gdat).format("DD/MM/YYYY, h:mm:ss a"));
                                } else {
                                    return (moment(data).format("DD/MM/YYYY, h:mm:ss a"));
                                }
                            },
                            "autoWidth": true
                        },
                        {
                            "data": "DateUpdate",
                            "render": function (data, type, row) {
                                var rowvalueallday = row.DateCreate;
                                if (rowvalueallday == '0000-00-00') {
                                    var gdat = '1900-01-01';
                                    return (moment(gdat).format("DD/MM/YYYY, h:mm:ss a"));
                                } else {
                                    return (moment(data).format("DD/MM/YYYY, h:mm:ss a"));
                                }
                            },
                            "autoWidth": true
                        },
                ]
            });
        });
    </script>
}

