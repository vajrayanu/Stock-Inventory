@model ITST.Models.User

@{
    ViewBag.Title = "Delete";
}

<h2>Delete</h2>

@if (ViewBag.CountDevice != 0)
{
    <h3>Please clear all devices before delete user</h3>
}
else
{
    <h3>Are you sure you want to delete this?</h3>
}
<div>
    <h4>User</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.FirstName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.FirstName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.LastName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.LastName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.EmployeeID)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.EmployeeID)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Position)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Position)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Section)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Section)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Phone)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Phone)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.UserLogOn)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.UserLogOn)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.IPAddress)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.IPAddress)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.MacAddress)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.MacAddress)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.CreateBy)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CreateBy)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.UpdateBy)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.UpdateBy)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.DateCreate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.DateCreate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.DateUpdate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.DateUpdate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.PhaseName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.PhaseName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Department.DepartmentName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Department.DepartmentName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Location.LocationName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Location.LocationName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Plant.PlantName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Plant.PlantName)
        </dd>

    </dl>

    @if (ViewBag.CountDevice != 0)
    {
        <table class="table table-bordered" id="myTable">
            <thead>
                <tr class="active">
                    <th>Action</th>
                    <th>SerialNumber</th>
                    <th>IPAddress</th>
                    <th>Type</th>
                    <th>Model</th>
                    <th>Brand</th>
                    <th>Status</th>
                    <th>CreateBy</th>
                    <th>UpdateBy</th>
                    <th>DateCreate</th>
                    <th>DateUpdate</th>
                    <th>User</th>
                    <th>Machine</th>
                    <th>Specification</th>
                    <th>Plant</th>
                    <th>Department</th>
                    <th>Location</th>
                    <th>Phase</th>
                    <th>LocationStock</th>
                </tr>
            </thead>
        </table>

        @section Scripts{
            <script>
    $(document).ready(function () {
        $('#myTable').DataTable({
            responsive: {
                details: {
                    renderer: function (api, rowIdx, columns) {
                        var data = $.map(columns, function (col, i) {
                            return col.hidden ?
                                '<tr data-dt-row="' + col.rowIndex + '" data-dt-column="' + col.columnIndex + '">' +
                                    '<td>' + col.title + ':' + '</td> ' +
                                    '<td>' + col.data + '</td>' +
                                '</tr>' :
                                '';
                        }).join('');

                        return data ?
                            $('<table/>').append(data) :
                            false;
                    }
                }
            },
            "ajax": {
                "url": '@Url.Action("getUserDevice", new { id = ViewBag.UserID })',
                "type": "GET",
                "datatype": "json"
            },
            "columns": [
                                    {
                                        "data": "DeviceID",
                                        "render": function (data, type, full, meta) {
                                            return '<a href="@Url.Action("Edit/","Device")' + data + '">Edit</a>' + '&nbsp;' + '|' + '&nbsp;' + '<a href="@Url.Action("Delete/","Device")' + data + '">Delete</a>' + '&nbsp;'+ '|' + '&nbsp;' + '<a href="@Url.Action("SetDevice/", "Device")' + data + '">Set</a>';
                                        },
                                        "autoWidth": true
                                    },
                    { "data": "SerialNumber", "autoWidth": true },
                    { "data": "IPAddress", "autoWidth": true },
                    { "data": "Type", "autoWidth": true },
                    { "data": "Model", "autoWidth": true },
                    { "data": "Brand", "autoWidth": true },
                    { "data": "Status", "autoWidth": true },
                    { "data": "CreateBy", "autoWidth": true },
                    { "data": "UpdateBy", "autoWidth": true },
                    {
                        "data": "DateCreate",
                        "render": function (value) {
                            if (value === null) return "";

                            var pattern = /Date\(([^)]+)\)/;
                            var results = pattern.exec(value);
                            var dt = new Date(parseFloat(results[1]));

                            return dt.getDate() + "/" + (dt.getMonth() + 1) + "/" + dt.getFullYear() + " " + dt.getHours() + ":" + dt.getMinutes() + ":" + dt.getSeconds();
                        },
                        "autoWidth": true
                    },

                    {
                        "data": "DateUpdate",
                        "render": function (value) {
                            if (value === null) return "";

                            var pattern = /Date\(([^)]+)\)/;
                            var results = pattern.exec(value);
                            var dt = new Date(parseFloat(results[1]));

                            return dt.getDate() + "/" + (dt.getMonth() + 1) + "/" + dt.getFullYear() + " " + dt.getHours() + ":" + dt.getMinutes() + ":" + dt.getSeconds();
                        },
                        "autoWidth": true
                    },
                    { "data": "UserName", "autoWidth": true },
                    { "data": "MachineName", "autoWidth": true },
                    { "data": "Specification", "autoWidth": true },
                    { "data": "Plant", "autoWidth": true },
                    { "data": "Department", "autoWidth": true },
                    { "data": "Location", "autoWidth": true },
                    { "data": "Phase", "autoWidth": true },
                    { "data": "LocationStockName", "autoWidth": true },
            ]
        });
    });
            </script>
        }
    }


    @if (ViewBag.CountDevice == 0)
    {
        using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-actions no-color">
                <input type="hidden" name="uri" value="@ViewBag.PreviousUrl" />
                <input type="submit" value="Delete" class="btn btn-danger" /> |
                @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })
            </div>
        }
    }

</div>
